apiVersion: v1               #版本号,必选
kind: Pod                    #pod种类
metadata:                    #元数据
  name: string               #pod的名称，命名规范需符合RFC 1035 规范
  namespace: string          #pod所属的命名空间，默认值为default
  labels:                    #自定义标签列表
  - name: string             
  annotations:               #自定义注解列表
    - name: string
spec:                        #pod中的详细定义
  containers:                #pod中的容器列表
  - name: string             #容器的名称，需符合RFC 1035规范
    image: string            #容器的镜像
    imagePullpolicy: [Always | Never | IfNotPersent]        #镜像的拉取策略
    command: [string]        #容器的启动命令列表，如果不指定，则使用镜像打包时使用的启动命令    
    args: [string]           #容器的启动命令参数
    workingDir: string       #容器的工作目录
    volumeMounts:            #挂载到容器内部的存储卷配置
    - name: string           #引用pod定义的共享存储卷的名称，需使用volume[] 部分定义的共享存储卷名称
      mountPath: string      #存储卷在容器内mount的绝对路径，应少于512个字符
      readOnly: boolean      #是否为只读模式，默认为读写模式
    ports:                   #容器需要暴露的端口号列表
    - name: string           #端口的名称
      containerPort: int     #容器需要监听的端口号
      hostPort: int          #容器所在主机需要监听的端口号，默认与containerPort相同。设置hostPort时，同一台宿主机将无法启动该容器的第2份副本
      protocol: string       #端口协议，支持TCP和UDP。默认值为TCP
    env:                     #容器运行前需设置的环境变量列表
    - name: string           #环境变量名称
        value: string        #环境变量的值
      resources:             #资源限制和资源请求的设置
        limits:              #资源限制的设置
          cpu: string        #CPU限制，单位为core数，将用于docker run --cpu-shares参数
          memory: string     #内存限制，单位可以为MiB、GiB等，将用于docker run --memory参数
        requests:            #资源限制的设置
          cpu: string        #CPU请求，单位为core数，容器启动的初始可用数量
          memory: string     #内存请求，单位可以为MiB、GiB等，容器启动的初始可用数量
    livenessprobe:           #对Pod内各容器健康检查的设置，当探测无响应几次后，系统将自动重启该容器。设置方法包括 exec、httpGet和tcpSocket 对一个容器仅需设置一种健康检查方法
      exec:                  #对Pod内各容器健康检查的设置
        command: [string]    #exec方式需要指定的命令或脚本   
      httpGet:               #对Pod内各容器健康检查的设置，HttpGet方式，需指定path、port
        path: string         
        port: number
        host: string
        scheme: string
        httpHeaders:
        - name: string
          value: string
      tcpSocket:            #对Pod内各容器健康检查设置，tcpSocket方式
        port: number        
      initialDelaySeconds: 0  #容器启动完成后首次探测时间，单位为s
      timeoutSeconds: 0       #对容器健康检查的探测等待响应的超时时间设置，单位为s，默认值为1s.若超过该超时时间设置，则将认为该容器不健康，会重启该容器。
      periodSeconds: 0        #对容器健康检查的定期探测时间设置，单位为s，默认10s探测一次
      successThreshold: 0     #成功阈值
    securityContext:
      privileged: false
  restartPolicy: [Always | Never | OnFailure]   #pod重启策略，可选择值 
  nodeSelector: object    #设置nodede的Label,以key:value格式指定，pod将被调度到具有这些Label的Node上
  imagePullSecrets:       #pull镜像时使用的Secret名称，以name:secretkey格式指定
    - name: string        
  hostNetwork: false      #是否使用主机网络模式，默认为false，设置为true表示容器使用宿主机网络，不再使用Docker网桥，该pod将无法在同一台宿主机上启动第2个副本
  volumes:
  - name: string
     emptyDir: {}
     hostPath:
       path: string
     secret:
       secretName: string
       items:
       - key: string
        path: string
     configMap:
       name: string
       items:
       - key: string
        path: string
